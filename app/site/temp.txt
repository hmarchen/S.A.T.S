<View style={styles2.container}>
    <Text style={styles2.title}>Admin Panel - Manage Reasons</Text>
    
    {error && (
    <View style={styles2.errorContainer}>
        <Text style={styles2.errorText}>{error}</Text>
    </View>
    )}
    
    <View style={styles2.paneContainer}>
    {/* Left pane - Reasons list */}
    <View style={styles2.leftPane}>
        <Text style={styles2.paneTitle}>Reasons List</Text>
        <FlatList
        data={reasons}
        keyExtractor={(item) => item.id.toString()}
        renderItem={({ item }) => (
            <View 
            style={[
                styles2.reasonItem,
                selectedReason?.id === item.id && styles2.selectedReason
            ]}
            onTouchEnd={() => setSelectedReason(item)}
            >
            <View style={styles2.reasonContent}>
                <Text style={styles2.category}>{item.category}</Text>
                <Text style={styles2.details}>{item.details}</Text>
            </View>
            <View style={styles2.actions}>
                <Pressable style={styles.button} onPress={() => handleEditReason(item)}>
                <Text>Edit</Text>
                </Pressable>
                <Pressable style={styles.clearButton} onPress={() => handleDeleteReason(item.id)} >
                <Text>Delete</Text>
                </Pressable>
            </View>
            </View>
        )}
        />
    </View>

    {/* Right pane - Edit/Add form */}
    <View style={styles2.rightPane}>
        <Text style={styles2.paneTitle}>
        {editingReason ? 'Edit Reason' : 'Add New Reason'}
        </Text>
        <ScrollView style={styles2.form}>
        {editingReason ? (
            <View style={styles2.editForm}>
            <TextInput
                style={styles2.input}
                placeholder="Category"
                value={editingReason.category}
                onChangeText={(text) => setEditingReason({ ...editingReason, category: text })}
            />
            <TextInput
                style={styles2.input}
                placeholder="Details"
                value={editingReason.details}
                onChangeText={(text) => setEditingReason({ ...editingReason, details: text })}
            />
            <Pressable style={styles.button} onPress={handleSaveEdit}>
                <Text>Save Changes</Text>
            </Pressable>
            <Pressable style={styles.clearButton} onPress={() => {
                setEditingReason(null);
                setSelectedReason(null);
            }}>
                <Text>Cancel</Text>
            </Pressable>
            </View>
        ) : (
            <View style={styles2.addForm}>
            <TextInput
                style={styles2.input}
                placeholder="Category"
                value={newReason.category}
                onChangeText={(text) => setNewReason({ ...newReason, category: text })}
            />
            <TextInput
                style={styles2.input}
                placeholder="Details"
                value={newReason.details}
                onChangeText={(text) => setNewReason({ ...newReason, details: text })}
            />
            <Pressable style={styles.button} onPress={handleAddReason}>
                <Text>Add Reason</Text>
            </Pressable>
            </View>
        )}
        </ScrollView>
    </View>
    </View>

    <Button title="Back to Home" onPress={() => router.navigate('./home')} />
</View>